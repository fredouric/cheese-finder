// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: cheese/cheese.proto

package cheesev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOneCheeseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOneCheeseRequest) Reset() {
	*x = GetOneCheeseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheese_cheese_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCheeseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCheeseRequest) ProtoMessage() {}

func (x *GetOneCheeseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheese_cheese_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCheeseRequest.ProtoReflect.Descriptor instead.
func (*GetOneCheeseRequest) Descriptor() ([]byte, []int) {
	return file_cheese_cheese_proto_rawDescGZIP(), []int{0}
}

func (x *GetOneCheeseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOneCheeseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cheese *Cheese `protobuf:"bytes,1,opt,name=cheese,proto3" json:"cheese,omitempty"`
}

func (x *GetOneCheeseResponse) Reset() {
	*x = GetOneCheeseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheese_cheese_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCheeseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCheeseResponse) ProtoMessage() {}

func (x *GetOneCheeseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheese_cheese_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCheeseResponse.ProtoReflect.Descriptor instead.
func (*GetOneCheeseResponse) Descriptor() ([]byte, []int) {
	return file_cheese_cheese_proto_rawDescGZIP(), []int{1}
}

func (x *GetOneCheeseResponse) GetCheese() *Cheese {
	if x != nil {
		return x.Cheese
	}
	return nil
}

type Cheese struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Departement   string `protobuf:"bytes,2,opt,name=departement,proto3" json:"departement,omitempty"`
	Fromage       string `protobuf:"bytes,3,opt,name=fromage,proto3" json:"fromage,omitempty"`
	PageFrancaise string `protobuf:"bytes,4,opt,name=pageFrancaise,proto3" json:"pageFrancaise,omitempty"`
	PageAnglaise  string `protobuf:"bytes,5,opt,name=pageAnglaise,proto3" json:"pageAnglaise,omitempty"`
	Lait          string `protobuf:"bytes,6,opt,name=lait,proto3" json:"lait,omitempty"`
	GeoShape      string `protobuf:"bytes,7,opt,name=geoShape,proto3" json:"geoShape,omitempty"`
	GeoPoint2D    string `protobuf:"bytes,8,opt,name=geoPoint2D,proto3" json:"geoPoint2D,omitempty"`
}

func (x *Cheese) Reset() {
	*x = Cheese{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheese_cheese_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cheese) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cheese) ProtoMessage() {}

func (x *Cheese) ProtoReflect() protoreflect.Message {
	mi := &file_cheese_cheese_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cheese.ProtoReflect.Descriptor instead.
func (*Cheese) Descriptor() ([]byte, []int) {
	return file_cheese_cheese_proto_rawDescGZIP(), []int{2}
}

func (x *Cheese) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Cheese) GetDepartement() string {
	if x != nil {
		return x.Departement
	}
	return ""
}

func (x *Cheese) GetFromage() string {
	if x != nil {
		return x.Fromage
	}
	return ""
}

func (x *Cheese) GetPageFrancaise() string {
	if x != nil {
		return x.PageFrancaise
	}
	return ""
}

func (x *Cheese) GetPageAnglaise() string {
	if x != nil {
		return x.PageAnglaise
	}
	return ""
}

func (x *Cheese) GetLait() string {
	if x != nil {
		return x.Lait
	}
	return ""
}

func (x *Cheese) GetGeoShape() string {
	if x != nil {
		return x.GeoShape
	}
	return ""
}

func (x *Cheese) GetGeoPoint2D() string {
	if x != nil {
		return x.GeoPoint2D
	}
	return ""
}

var File_cheese_cheese_proto protoreflect.FileDescriptor

var file_cheese_cheese_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x65,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x06, 0x43,
	0x68, 0x65, 0x65, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x61, 0x69,
	0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x61, 0x69, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x41,
	0x6e, 0x67, 0x6c, 0x61, 0x69, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x67, 0x65, 0x41, 0x6e, 0x67, 0x6c, 0x61, 0x69, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x69, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x32, 0x5c, 0x0a, 0x09, 0x43,
	0x68, 0x65, 0x65, 0x73, 0x65, 0x41, 0x50, 0x49, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70,
	0x62, 0x2f, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_cheese_cheese_proto_rawDescOnce sync.Once
	file_cheese_cheese_proto_rawDescData = file_cheese_cheese_proto_rawDesc
)

func file_cheese_cheese_proto_rawDescGZIP() []byte {
	file_cheese_cheese_proto_rawDescOnce.Do(func() {
		file_cheese_cheese_proto_rawDescData = protoimpl.X.CompressGZIP(file_cheese_cheese_proto_rawDescData)
	})
	return file_cheese_cheese_proto_rawDescData
}

var file_cheese_cheese_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cheese_cheese_proto_goTypes = []interface{}{
	(*GetOneCheeseRequest)(nil),  // 0: cheese.v1.GetOneCheeseRequest
	(*GetOneCheeseResponse)(nil), // 1: cheese.v1.GetOneCheeseResponse
	(*Cheese)(nil),               // 2: cheese.v1.Cheese
}
var file_cheese_cheese_proto_depIdxs = []int32{
	2, // 0: cheese.v1.GetOneCheeseResponse.cheese:type_name -> cheese.v1.Cheese
	0, // 1: cheese.v1.CheeseAPI.GetOneCheese:input_type -> cheese.v1.GetOneCheeseRequest
	1, // 2: cheese.v1.CheeseAPI.GetOneCheese:output_type -> cheese.v1.GetOneCheeseResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cheese_cheese_proto_init() }
func file_cheese_cheese_proto_init() {
	if File_cheese_cheese_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cheese_cheese_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCheeseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheese_cheese_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCheeseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheese_cheese_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cheese); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cheese_cheese_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cheese_cheese_proto_goTypes,
		DependencyIndexes: file_cheese_cheese_proto_depIdxs,
		MessageInfos:      file_cheese_cheese_proto_msgTypes,
	}.Build()
	File_cheese_cheese_proto = out.File
	file_cheese_cheese_proto_rawDesc = nil
	file_cheese_cheese_proto_goTypes = nil
	file_cheese_cheese_proto_depIdxs = nil
}
